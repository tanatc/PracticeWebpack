npm list -g 查看所有全局安装的模块
npm install express  安装模块
npm uninstall express  卸载模块
npm update express  更新模块
npm search express  搜索模块
npm init    创建模块，package.json 文件是必不可少的。我们可以使用 NPM 生成 package.json 文件，生成的文件包含了基本的结果。
npm update <package> -g 可以把全局安装的对应命令行程序更新至最新版。
npm -D  与npm --save-dev 相同  会把包添加到开发依赖


步骤
npm init 初始化
npm install wabpack webpack-cli -g  全局安装
npm install webpack webpack-cli -D  开发环境安装，并添加到开发依赖
webpack4使用webpack
webpack5以后的版本使用npx webpack命令

webpack能处理js、json资源，不能处理css、img等其他资源
生产环境和开发环境能将ES6模块化编译成浏览器额能识别的模块化
生产环境比开发环境多一个压缩js代码




优化配置
webpack性能优化

开发环境性能优化
优化打包构建速度:HMR(热模块替换)
优化代码调试：source-map(代码映射技术)


生产环境性能优化
优化打包构建速度：oneof、babel缓存
优化代码运行的性能：
    缓存（hash每次打包都会生成一个不同hash值-chunkhash打包来自同一个chunk生成同一个chunkhash值-contenthash根据文件内容不同生成不同contenthash）
    tree shaking
    code split
    懒加载、预加载
    


1热更新devServer：{hot： true}

2source-map:一种提供源代码到构建后代码映射的技术
devtool:'source-map'

3oneOf:[]只匹配一个loader

4缓存：bablel缓存，第二次构建时会读之前的缓存
文件资源缓存：
hash：每次webpack构建时会生成一个唯一的hash值
chunkhash：根据chunk生成的hash值，如果打包来源同一个chunk，那么hash值一样
contenthash：根据文件内容生成的hash值，不同文件hash值一定不一样

5tree-shaking
去除无用代码
前提：1、必须用es6模块化，2、开启production
作用：减少代码体积


6代码分割 code-split
多入口entry：{main:'', test:''} 

问题：
针对热更新无法监测html文件更新问题解决方案两个：
1在入口文件中将html文件引入
2在entry中添加html文件

